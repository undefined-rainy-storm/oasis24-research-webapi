{"version":3,"file":"map.naver.js","sourceRoot":"","sources":["../../src/elements/map.naver.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AACtC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AAGjD,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,UAAU;IAOtC,MAAM,KAAc,UAAU;QAC5B,OAAO;YACL,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACrB,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACrB,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;SACvB,CAAA;IACH,CAAC;IAED,YACE,GAAW,EACX,GAAW,EACX,IAAY;QAEZ,KAAK,EAAE,CAAA;QAMA,WAAM,GAAG,GAAG,EAAE;YACrB,OAAO,IAAI,CAAA;;;;;;KAMV,CAAA;QACH,CAAC,CAAA;QAEQ,iBAAY,GAAG,GAAG,EAAE;YAC3B,MAAM,aAAa,GAAG,IAAI,CAAC,UAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAA;YAEhE,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAc,EAAE;gBAC5C,MAAM,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAa,EAAE,IAAI,CAAC,GAAa,CAAC;gBACrE,IAAI,EAAE,IAAI,CAAC,IAAc;aAC1B,CAAC,CAAA;QACJ,CAAC,CAAA;QAtBC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;IAClB,CAAC;CAoBF,CAAA;AA5CK,eAAe;IADpB,aAAa,CAAC,mBAAmB,CAAC;GAC7B,eAAe,CA4CpB","sourcesContent":["import { LitElement, html } from 'lit'\nimport { customElement } from 'lit/decorators.js'\n\n@customElement('map-wrapper-naver')\nclass MapWrapperNaver extends LitElement {\n\n  lat: Number\n  lng: Number\n  zoom: Number\n  map: naver.maps.Map | undefined\n\n  static override get properties() {\n    return {\n      lat: { type: Number },\n      lng: { type: Number },\n      zoom: { type: Number },\n    }\n  }\n\n  constructor(\n    lat: Number,\n    lng: Number,\n    zoom: Number,\n  ) {\n    super()\n    this.lat = lat\n    this.lng = lng\n    this.zoom = zoom\n  }\n\n  override render = () => {\n    return html`\n      <div\n        id=\"map-box\"\n        style=\"width: 100%; height: 400px;\"\n      >\n      </div>\n    `\n  }\n\n  override firstUpdated = () => {\n    const maoBoxElement = this.shadowRoot!.getElementById('map-box')\n\n    this.map = new naver.maps.Map(maoBoxElement!, {\n      center: new naver.maps.LatLng(this.lat as number, this.lng as number),\n      zoom: this.zoom as number\n    })\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'map-wrapper-naver': MapWrapperNaver\n  }\n}\n"]}